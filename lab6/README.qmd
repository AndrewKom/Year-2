---
title: "Практическая работа 6"
format:
  md:
    output-file: README.md
editor: visual
---

## Цель работы

1.  Закрепить навыки исследования данных журнала Windows Active Directory
2.  Изучить структуру журнала системы Windows Active Director.
3.  Закрепить практические навыки использования языка программирования R для обработки данных
4.  Закрепить знания основных function обработки данных экосистемы tidyverse языка R

## Исходные данные

1.  ОС Windows
2.  tidyverse
3.  RStudio

## План

1.  Используем RStudio
2.  Используя программный пакет dplyr языка программирования R провести анализ файла с выгрузкой данных из системы SIEM. Выявить факт компрометации
3.  Создать отчет

## Описание шагов:

1.  *Воспользуемся RStudio*

2.  Скачиваем пакет tidyverse

3.  Подготовить данные

4.  Проанализировать данные

### **Подготовка данных**

```{r}

library(jsonlite)
library(tidyr)
library(dplyr)
library(xml2)
library(rvest)
```

1 Импортируйте данные в R (Датасет находится по адресу https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz.)

```{r}
download.file("https://storage.yandexcloud.net/iamcth-data/dataset.tar.gz", destfile = file <- tempfile(fileext = ".tar.gz"), mode = "wb")

temp <- tempdir()
untar(file, exdir = temp)

json <- list.files(temp, pattern="\\.json$", full.names = TRUE, recursive = TRUE)
info_json <- stream_in(file(json))
```

```{r}
webpage_url <- "https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/appendix-l--events-to-monitor"
webpage <- xml2::read_html(webpage_url)
event_df <- rvest::html_table(webpage)[[1]]
event_df
```

2.  Привести датасеты в вид "аккуратных данных", преобразовать типы столбцов в соответствии с типом данных

```{r}
info_json <- info_json %>% mutate('@timestamp'= as.POSIXct(`@timestamp`, format = "%Y-%m-%dT%H:%M:%OSZ", tz = "UTC"))
info_json %>% select(`@timestamp`) %>% slice(1:10)
```

3 Просмотрите общую структуру данных с помощью функции glimpse()

```{r}
glimpse(info_json)
```

### **Анализ**

1 Раскройте датафрейм избавившись от вложенных датафреймов (Для обнаружения таких можно использовать функцию dplyr::glimpse() , а для раскрытия вложенности -- tidyr::unnest())

```{r}
info_json_vl <- info_json %>%  
  tidyr::unnest(c('@metadata', event, log, winlog, ecs, host, agent), names_sep = ".") %>% 
  tidyr::unnest(c(winlog.event_data,winlog.process,winlog.user, winlog.user_data,), names_sep = ".")
glimpse(info_json_vl)
```

2 Минимизируйте количество колонок в датафрейме -- уберите колоки с единственным значением параметра.

```{r}
uniquelength <- sapply(info_json_vl,function(x) length(unique(x) ))
info_clear <- subset(info_json_vl, select=uniquelength>1)
glimpse(info_clear)
```

3 Какое количество хостов представлено в данном датасете?

```{r}
info_json_vl %>% distinct(agent.hostname) %>% nrow()
```

4 Подготовьте датафрейм с расшифровкой Windows Event_ID, приведите типы данных к типу их значений.

```{r}
df <- merge(x = info_clear, y = event_df, by.x="event.code", by.y = "Current Windows Event ID")
```

```{r}
df2 <- merge(x = info_clear, y = event_df, by.x="event.code", by.y = "Legacy Windows Event ID")
```

5 Есть ли в логе события с высоким и средним уровнем значимости? Сколько их?

```{r}
df %>%  filter(`Potential Criticality` == "Medium"
| `Potential Criticality` == "High" | `Potential Criticality` == "Medium to High" ) %>% nrow()
```

```{r}
df2 %>%  filter(`Potential Criticality` == "Medium"
| `Potential Criticality` == "High" | `Potential Criticality` == "Medium to High" ) %>% nrow()
```

## Оценка результатов

Задача выполнена при помощи приложения RStudio, удалось закрепить навыки исследования данных журнала Windows Active Directory

## Вывод

В данной работе я смог исследовать файл с выгрузкой данных из системы SIEM и помог выявить факт компрометации. Также изучил структуру журнала системы Windows Active Directory
